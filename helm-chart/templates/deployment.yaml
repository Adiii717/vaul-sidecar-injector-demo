apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm-chart.fullname" . }}
  labels:
    {{- include "helm-chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "helm-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/log-level: "debug"
        vault.hashicorp.com/role: "{{ .Release.Namespace }}-{{ .Release.Name }}"
        vault.hashicorp.com/agent-init-first : "true"
        vault.hashicorp.com/agent-inject-command-env.sh: "chmod +x /vault/secrets/env.sh"
        vault.hashicorp.com/agent-inject-secret-env.sh: "kv/{{ .Release.Namespace }}/{{ .Values.environment }}/{{ .Release.Name }}"
        vault.hashicorp.com/agent-inject-template-env.sh: |
            {{printf "{{ with secret \"kv/"}}{{ .Release.Namespace }}/{{ .Values.environment }}/{{ .Release.Name }}" {{ ` }}
            #!/bin/bash
            {{ range $k, $v := .Data.data }}
            export {{ $k }}="{{ $v }}"
            {{ end }}
            {{ end }} `}}
        vault.hashicorp.com/log-level : "debug"
        vault.hashicorp.com/auth-path: "auth/kubernetes/"
        ################################ 
        #not required for local vault
        ################################
        {{- if .Values.vault.enterprise.enabled }}
        vault.hashicorp.com/namespace : "admin"
        {{- end }}
      labels:
        {{- include "helm-chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "helm-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag}}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # overide command for showing env
          command: ["sh", "-c", "source /vault/secrets/env.sh && printenv &&  /vault/secrets/env.sh && cat  /vault/secrets/env.sh && tail -f /dev/null"]
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
